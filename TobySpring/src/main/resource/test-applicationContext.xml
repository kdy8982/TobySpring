<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3307/spring" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
	</bean>

	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="UserLevelUpgradePolicy" class="springbook.user.service.UserLevelUpgradeGeneralPolicy">
		<property name="userDao" ref="userDao" />
	</bean>
	
	<bean id="transactionManager" class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	
	<bean id="mailSender" class="springbook.user.service.DummyMailSender" />
	
	<bean id="userServiceImpl" class="springbook.user.service.UserServiceImpl" >
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	
	<!-- <bean id="userService" class="springbook.user.service.TxProxyFactoryBean">
		<property name="target" ref="userServiceImpl" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="pattern" value="upgradeLevels" />
		<property name="serviceInterface" value="springbook.user.service.UserService" />
	</bean> -->
	
	
	<!-- 스프링 제공 어드바이스(부가기능)  -->
	<bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<!-- 스프링 제공 포인트컷(부가기능을 적용할 '메서드만'을 선정) -->
	<!-- 
	<bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="upgrade*"/>
	</bean>
	--> 

	<!-- 스프링 제공 포인트컷(부가기능을 적용할 '클래스'와 '메서드' 모두 선정) -->
	<!-- 
	<bean id="transactionPointcut" class="springbook.user.service.NameMatchClassMethodPointcut">
		<property name="mappedClassName" value="*ServiceImpl"></property>
		<property name="mappedName" value="upgrade*"></property>
	</bean>
	 -->
	 <!-- AOP ApsectJ를 이용한 포인트컷 등록(위에보다 단순해짐) -->
	 <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
	 	<property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))" />
	 </bean>
	
	<!-- 위에 등록한 어드바이스와 포인트컷을 담아 어드바이저로 등록 -->
	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactionAdvice" />
		<property name="pointcut" ref="transactionPointcut" />
	</bean>
	
	<!-- '어드바이저를 이용한 자동프록시생성기 Bean'을 등록한 이후로, 더이상 어드바이저를 명시적으로 등록하지 않음 -->
	<!-- 
	<bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="userServiceImpl"/>
		<property name="interceptorNames"> 어드바이스와 어드바이저를 동시에 설정할 수 있는 프로퍼티
			<list>
				<value>transactionAdvisor</value>
			</list>
		</property>
	</bean> 
	-->
	 
	<!-- '어드바이저를 이용한 자동프록시생성기' : 등록된 빈 들중 Advisor를 구현한 것들을 찾아, 포인트컷을  지정해보면서 자동으로 프록시를 만들어, 바꿔치기 해줌 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

	<bean id="userService" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>

	<!-- '어드바이저를 이용한 자동프록시생성기'를 테스트해보기 위해, 임시로 만든 ServiceImpl 빈(트랜잭션 에러를 일부러 냄) --> 	
	<bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserService" parent="userService" />
	
</beans>